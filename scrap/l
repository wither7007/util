done
JSDOM {
  [Symbol(window)]: 
   Window {
     _registeredHandlers: Set {},
     _eventHandlers: {},
     _globalProxy: [Circular],
     _document: Document { location: [Getter/Setter] },
     _sessionHistory: 
      SessionHistory {
        _window: [Circular],
        _windowImpl: [EventTargetImpl],
        _historyTraversalQueue: Set {},
        _entries: [Array],
        _currentIndex: 0 },
     _virtualConsole: VirtualConsole { _events: [Object], _eventsCount: 27, _maxListeners: undefined },
     _runScripts: undefined,
     _top: [Circular],
     _parent: [Circular],
     _frameElement: null,
     _length: 0,
     _pretendToBeVisual: false,
     length: [Getter],
     window: [Getter],
     frameElement: [Getter],
     frames: [Getter],
     self: [Getter],
     parent: [Getter],
     top: [Getter],
     document: [Getter],
     external: [Getter],
     location: [Getter],
     history: [Getter],
     navigator: [Getter],
     locationbar: [Getter],
     menubar: [Getter],
     personalbar: [Getter],
     scrollbars: [Getter],
     statusbar: [Getter],
     toolbar: [Getter],
     performance: [Getter],
     screen: [Getter],
     addEventListener: [Function: bound addEventListener],
     removeEventListener: [Function: bound removeEventListener],
     dispatchEvent: [Function: bound dispatchEvent],
     setTimeout: [Function],
     setInterval: [Function],
     clearInterval: [Function: bound stopTimer],
     clearTimeout: [Function: bound stopTimer],
     __stopAllTimers: [Function],
     postMessage: [Function],
     atob: [Function],
     btoa: [Function],
     FileReader: { [Function: FileReader] EMPTY: 0, LOADING: 1, DONE: 2 },
     WebSocket: { [Function: WebSocket] CONNECTING: 0, OPEN: 1, CLOSING: 2, CLOSED: 3 },
     AbortSignal: [Function: AbortSignal],
     AbortController: [Function: AbortController],
     XMLHttpRequest: { [Function: XMLHttpRequest] UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 },
     ArrayBuffer: [Function: ArrayBuffer],
     Int8Array: [Function: Int8Array],
     Uint8Array: [Function: Uint8Array],
     Uint8ClampedArray: [Function: Uint8ClampedArray],
     Int16Array: [Function: Int16Array],
     Uint16Array: [Function: Uint16Array],
     Int32Array: [Function: Int32Array],
     Uint32Array: [Function: Uint32Array],
     Float32Array: [Function: Float32Array],
     Float64Array: [Function: Float64Array],
     stop: [Function],
     close: [Function],
     getComputedStyle: [Function],
     captureEvents: [Function],
     releaseEvents: [Function],
     console: 
      { assert: [Function],
        clear: [Function],
        count: [Function],
        debug: [Function],
        error: [Function],
        group: [Function],
        groupCollapsed: [Function],
        groupEnd: [Function],
        info: [Function],
        log: [Function],
        table: [Function],
        time: [Function],
        timeEnd: [Function],
        trace: [Function],
        warn: [Function] },
     name: 'nodejs',
     devicePixelRatio: 1,
     innerWidth: 1024,
     innerHeight: 768,
     outerWidth: 1024,
     outerHeight: 768,
     pageXOffset: 0,
     pageYOffset: 0,
     screenX: 0,
     screenY: 0,
     scrollX: 0,
     scrollY: 0,
     screenLeft: 0,
     screenTop: 0,
     alert: [Function],
     blur: [Function],
     confirm: [Function],
     focus: [Function],
     moveBy: [Function],
     moveTo: [Function],
     open: [Function],
     print: [Function],
     prompt: [Function],
     resizeBy: [Function],
     resizeTo: [Function],
     scroll: [Function],
     scrollBy: [Function],
     scrollTo: [Function],
     [Symbol(named property tracker)]: 
      NamedPropertiesTracker {
        object: [Circular],
        objectProxy: [Circular],
        resolverFunc: [Function: bound namedPropertyResolver],
        trackedValues: Map {} } } }
